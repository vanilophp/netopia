<?php

declare(strict_types=1);

/**
 * Contains the BaseNetopiaHttpException class.
 *
 * @copyright   Copyright (c) 2021 Attila Fulop
 * @author      Attila Fulop
 * @license     MIT
 * @since       2021-02-25
 *
 */

namespace Vanilo\Netopia\Exceptions;

use Illuminate\Http\Exceptions\HttpResponseException;
use Symfony\Component\HttpFoundation\Response;

/**
 * Base Exception class to throw a "responsable" exception that returns
 * a compliant XML format response for the Netopia/Mobilpay Gateway.
 * The format and the values are taken from the Netopia Documents
 *
 * Response example:
 * `<?xml version="1.0" encoding="utf-8" ?>
 * <crc error_type=”1|2” error_code=”{numeric}”>{message}</crc>
 *
 * error_type: based on this mobilPay will activate a resend IPN mechanism or not.
 *     If its value is 1, it means you encountered a temporary error. Set it to 2 if you
 *     encountered a permanent error;
 *
 * error_code: this is your internal error code, helping you to view the error
 * generated by your web application;
 *
 * message: if you encountered an error while processing the IPN, this should be
 * your error message, helping you find the error. If no error occurred, you should set
 * this to the crc value received in the IPN or something else that you may find suitable
 *
 */
abstract class BaseNetopiaHttpException extends HttpResponseException
{
    private const TEMPORARY_ERROR = 1;
    private const PERMANENT_ERROR = 2;

    public function __construct(int $httpStatusCode, string $errorMessage)
    {
        // Logic we use here: client errors we set as temporary, other ones (500s typically) to permanent
        $errorType = 4 === intdiv($httpStatusCode, 100) ? self::TEMPORARY_ERROR : self::PERMANENT_ERROR;
        parent::__construct(
            new Response(
                '<?xml version="1.0" encoding="utf-8" ?>' .
                "<crc error_type=\"$errorType\" error_code=\"$httpStatusCode\">$errorMessage</crc>",
                $httpStatusCode,
                ['Content-type' => 'application/xml; charset="utf-8"']
            )
        );
    }
}
